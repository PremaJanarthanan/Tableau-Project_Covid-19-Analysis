<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid_19_india' inline='true' name='federated.1urngxh1fx86yq1aoc37312nnchs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_india' name='textscan.1ivtssm032s9ik1546cmf1u32738'>
            <connection class='textscan' directory='C:/Prema/Data Science/Tableau/projects/covid 19' filename='covid_19_india.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ivtssm032s9ik1546cmf1u32738' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ivtssm032s9ik1546cmf1u32738' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_A283A021414D49D0BD62F3EBC53BC219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_A283A021414D49D0BD62F3EBC53BC219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_A283A021414D49D0BD62F3EBC53BC219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_A283A021414D49D0BD62F3EBC53BC219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_A283A021414D49D0BD62F3EBC53BC219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_A283A021414D49D0BD62F3EBC53BC219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_A283A021414D49D0BD62F3EBC53BC219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_A283A021414D49D0BD62F3EBC53BC219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_A283A021414D49D0BD62F3EBC53BC219]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Cured_India' datatype='real' name='[Calculation_340584759362146306]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Cured])/sum([Confirmed])*100' />
      </column>
      <column caption='% Death_India' datatype='real' name='[Calculation_340584759362445315]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Deaths])/sum([Confirmed])*100' />
      </column>
      <column caption='%cured' datatype='real' name='[Calculation_340584759715205124]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Cured])/max([Confirmed])*100' />
      </column>
      <column caption='%death' datatype='real' name='[Calculation_340584759715729413]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Deaths])/max([Confirmed])' />
      </column>
      <column caption='Confirmed Foreign National' datatype='string' name='[ConfirmedForeignNational]' role='dimension' type='nominal' />
      <column caption='Confirmed Indian National' datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_A283A021414D49D0BD62F3EBC53BC219]' role='measure' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_340584759362146306]' derivation='User' name='[usr:Calculation_340584759362146306:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_340584759362445315]' derivation='User' name='[usr:Calculation_340584759362445315:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_340584759715205124]' derivation='User' name='[usr:Calculation_340584759715205124:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_340584759715729413]' derivation='User' name='[usr:Calculation_340584759715729413:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State/UnionTerritory:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#b9173a'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>&quot;Nagaland\#&quot;</bucket>
            </map>
            <map to='#e44044'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#f36755'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='red_10_0' type='palette'>
            <map to='#308344'>
              <bucket>&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362146306:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362445315:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759715729413:qk]&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Cured:qk]&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759715205124:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_india.csv' id='covid_19_india.csv_A283A021414D49D0BD62F3EBC53BC219'>
            <properties context=''>
              <relation connection='textscan.1ivtssm032s9ik1546cmf1u32738' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Time' ordinal='2' />
                  <column datatype='string' name='State/UnionTerritory' ordinal='3' />
                  <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
                  <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
                  <column datatype='integer' name='Cured' ordinal='6' />
                  <column datatype='integer' name='Deaths' ordinal='7' />
                  <column datatype='integer' name='Confirmed' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='% comparison of deaths vs cured'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1urngxh1fx86yq1aoc37312nnchs' />
          </datasources>
          <datasource-dependencies datasource='federated.1urngxh1fx86yq1aoc37312nnchs'>
            <column caption='% Cured_India' datatype='real' name='[Calculation_340584759362146306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Cured])/sum([Confirmed])*100' />
            </column>
            <column caption='% Death_India' datatype='real' name='[Calculation_340584759362445315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Deaths])/sum([Confirmed])*100' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_340584759362146306]' derivation='User' name='[usr:Calculation_340584759362146306:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_340584759362445315]' derivation='User' name='[usr:Calculation_340584759362445315:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:Date:ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-01-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-12#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362445315:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1urngxh1fx86yq1aoc37312nnchs].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1urngxh1fx86yq1aoc37312nnchs].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362146306:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Cured_India:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362146306:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362445315:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Death_India:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362445315:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362146306:qk] + ([federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362445315:qk] + [federated.1urngxh1fx86yq1aoc37312nnchs].[sum:Confirmed:qk]))</rows>
        <cols>[federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>% Cured_India: </run>
              <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362146306:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362146306:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:qk]</field>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362146306:qk]</field>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-03-08 00:00:00#</value>
                    <value>7.6923076923076925</value>
                    <value>&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362146306:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-151' y='-74' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>% Death_India: </run>
              <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362445315:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362445315:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:qk]</field>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362445315:qk]</field>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-03-08 00:00:00#</value>
                    <value>0.0</value>
                    <value>&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759362445315:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-127' y='-41' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{057206BD-E500-4544-897B-42FC4B0DE87B}' />
    </worksheet>
    <worksheet name='% distribution of confirmed cases of each state '>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1urngxh1fx86yq1aoc37312nnchs' />
          </datasources>
          <datasource-dependencies datasource='federated.1urngxh1fx86yq1aoc37312nnchs'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[pcto:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:Date:qk]' included-values='in-range'>
            <min>#2020-04-16#</min>
            <max>#2020-04-16#</max>
          </filter>
          <manual-sort column='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
              <bucket>&quot;Assam&quot;</bucket>
              <bucket>&quot;Bihar&quot;</bucket>
              <bucket>&quot;Chandigarh&quot;</bucket>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
              <bucket>&quot;Delhi&quot;</bucket>
              <bucket>&quot;Goa&quot;</bucket>
              <bucket>&quot;Gujarat&quot;</bucket>
              <bucket>&quot;Haryana&quot;</bucket>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
              <bucket>&quot;Jharkhand&quot;</bucket>
              <bucket>&quot;Karnataka&quot;</bucket>
              <bucket>&quot;Kerala&quot;</bucket>
              <bucket>&quot;Ladakh&quot;</bucket>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
              <bucket>&quot;Maharashtra&quot;</bucket>
              <bucket>&quot;Manipur&quot;</bucket>
              <bucket>&quot;Meghalaya&quot;</bucket>
              <bucket>&quot;Mizoram&quot;</bucket>
              <bucket>&quot;Nagaland\#&quot;</bucket>
              <bucket>&quot;Odisha&quot;</bucket>
              <bucket>&quot;Puducherry&quot;</bucket>
              <bucket>&quot;Punjab&quot;</bucket>
              <bucket>&quot;Rajasthan&quot;</bucket>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
              <bucket>&quot;Telengana&quot;</bucket>
              <bucket>&quot;Tripura&quot;</bucket>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
              <bucket>&quot;Uttarakhand&quot;</bucket>
              <bucket>&quot;West Bengal&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' />
              <wedge-size column='[federated.1urngxh1fx86yq1aoc37312nnchs].[sum:Confirmed:qk]' />
              <size column='[federated.1urngxh1fx86yq1aoc37312nnchs].[pcto:sum:Confirmed:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]><[federated.1urngxh1fx86yq1aoc37312nnchs].[pcto:sum:Confirmed:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[sum:Confirmed:qk]</field>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Delhi&quot;</value>
                    <value>1578</value>
                    <value>0.12367740418528098</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='149' y='0' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]><[federated.1urngxh1fx86yq1aoc37312nnchs].[pcto:sum:Confirmed:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[sum:Confirmed:qk]</field>
                      <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Maharashtra&quot;</value>
                    <value>2919</value>
                    <value>0.2287796849282859</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='50' y='46' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{106666FC-3D25-407D-B2F3-90EAF2EED127}' />
    </worksheet>
    <worksheet name='Comparison of death vs cured of chosen state'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1urngxh1fx86yq1aoc37312nnchs' />
          </datasources>
          <datasource-dependencies datasource='federated.1urngxh1fx86yq1aoc37312nnchs'>
            <column caption='%cured' datatype='real' name='[Calculation_340584759715205124]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([Cured])/max([Confirmed])*100' />
            </column>
            <column caption='%death' datatype='real' name='[Calculation_340584759715729413]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([Deaths])/max([Confirmed])' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_340584759715205124]' derivation='User' name='[usr:Calculation_340584759715205124:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_340584759715729413]' derivation='User' name='[usr:Calculation_340584759715729413:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Kerala&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759715729413:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759715205124:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759715729413:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759715205124:qk] + ([federated.1urngxh1fx86yq1aoc37312nnchs].[usr:Calculation_340584759715729413:qk] + [federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]))</rows>
        <cols>([federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk] * [federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:qk])</cols>
      </table>
      <simple-id uuid='{A244BEC2-FCE6-4B68-AD42-D37F8273EF54}' />
    </worksheet>
    <worksheet name='Covid 19 India'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1urngxh1fx86yq1aoc37312nnchs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1urngxh1fx86yq1aoc37312nnchs'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1urngxh1fx86yq1aoc37312nnchs].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1urngxh1fx86yq1aoc37312nnchs].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1urngxh1fx86yq1aoc37312nnchs].[Latitude (generated)]</column>
            <column>[federated.1urngxh1fx86yq1aoc37312nnchs].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' />
              <lod column='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' />
              <color column='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' />
              <geometry column='[federated.1urngxh1fx86yq1aoc37312nnchs].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State/UnionTerritory:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>No of confirmed cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1urngxh1fx86yq1aoc37312nnchs].[Latitude (generated)]</rows>
        <cols>[federated.1urngxh1fx86yq1aoc37312nnchs].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AE887600-17D8-493F-AC51-B7B95936492E}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1urngxh1fx86yq1aoc37312nnchs' />
          </datasources>
          <datasource-dependencies datasource='federated.1urngxh1fx86yq1aoc37312nnchs'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]</rows>
        <cols>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{CA2962A6-F779-4B55-B26A-AF1EBD4B4BE7}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1urngxh1fx86yq1aoc37312nnchs' />
          </datasources>
          <datasource-dependencies datasource='federated.1urngxh1fx86yq1aoc37312nnchs'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[sum:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:Date:ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-01-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-12#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:Date:ok]</column>
            <column>[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1urngxh1fx86yq1aoc37312nnchs].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]</rows>
        <cols>[federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:ok]</cols>
      </table>
      <simple-id uuid='{2B5AEAAB-E3E3-4AB6-9AB3-F64CBF9604A2}' />
    </worksheet>
    <worksheet name='State wise no.of confirmed cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1urngxh1fx86yq1aoc37312nnchs' />
          </datasources>
          <datasource-dependencies datasource='federated.1urngxh1fx86yq1aoc37312nnchs'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]'>
            <groupfilter function='level-members' level='[none:State/UnionTerritory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d2</color>
                <color>#e2b5b5</color>
                <color>#db9999</color>
                <color>#d47f7f</color>
                <color>#cd6666</color>
                <color>#c64f4f</color>
                <color>#bf3939</color>
                <color>#b82424</color>
                <color>#b11111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' />
              <text column='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]</rows>
        <cols>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{A91D5A72-23E8-4704-BBE4-5DA18A493261}' />
    </worksheet>
    <worksheet name='Ststistics of chosen state'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1urngxh1fx86yq1aoc37312nnchs' />
          </datasources>
          <datasource-dependencies datasource='federated.1urngxh1fx86yq1aoc37312nnchs'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Kerala&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</column>
            <column>[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1urngxh1fx86yq1aoc37312nnchs].[Multiple Values]</rows>
        <cols>([federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk] / [federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{F1838904-E69C-4A25-BD05-CFCD7EEFC00F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid 19 India Analysis'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='21' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='24' param='vert' w='98666' x='667' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5250' id='25' w='98666' x='667' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92750' id='22' w='98666' x='667' y='6250' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='68250' id='3' name='Covid 19 India' w='31583' x='333' y='5250' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8875' id='8' name='Covid 19 India' pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' w='11667' x='77500' y='8750' />
        <zone h='26125' id='9' name='% distribution of confirmed cases of each state ' w='31583' x='32167' y='7875' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='21500' id='14' name='% distribution of confirmed cases of each state ' pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' w='16083' x='76583' y='15750' />
        <zone h='32250' id='15' name='% comparison of deaths vs cured' w='42083' x='32417' y='39000' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10750' id='20' name='% comparison of deaths vs cured' pane-specification-id='2' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' w='11667' x='79917' y='51750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='27' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='26' param='vert' w='98666' x='667' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5250' id='25' w='98666' x='667' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='68250' id='3' is-fixed='true' name='Covid 19 India' w='31583' x='333' y='5250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8875' id='8' name='Covid 19 India' pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' w='11667' x='77500' y='8750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='209' h='26125' id='9' is-fixed='true' name='% distribution of confirmed cases of each state ' w='31583' x='32167' y='7875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='21500' id='14' name='% distribution of confirmed cases of each state ' pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' w='16083' x='76583' y='15750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='258' h='32250' id='15' is-fixed='true' name='% comparison of deaths vs cured' w='42083' x='32417' y='39000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10750' id='20' name='% comparison of deaths vs cured' pane-specification-id='2' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' w='11667' x='79917' y='51750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4995F3A2-FC67-421D-99FD-849AFBEEE06F}' />
    </dashboard>
    <dashboard name='Covid 19 statewise analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ff0000'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='covid_19_india' name='federated.1urngxh1fx86yq1aoc37312nnchs' />
      </datasources>
      <datasource-dependencies datasource='federated.1urngxh1fx86yq1aoc37312nnchs'>
        <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='17' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='20' param='vert' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5125' id='21' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92875' id='18' w='98400' x='800' y='6125' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='24750' id='3' name='State wise no.of confirmed cases' w='81900' x='400' y='4625' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8875' id='8' name='State wise no.of confirmed cases' pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' w='14000' x='84700' y='9000' />
        <zone h='38000' id='9' name='Ststistics of chosen state' w='43500' x='600' y='36000' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9750' id='15' name='Ststistics of chosen state' pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' w='14000' x='85400' y='28625' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='6500' id='14' mode='dropdown' name='Ststistics of chosen state' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' w='16800' x='83300' y='20750' />
        <zone h='31250' id='16' name='Comparison of death vs cured of chosen state' w='52900' x='44400' y='42625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#ff0000'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='23' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='22' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5125' id='21' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='198' h='24750' id='3' is-fixed='true' name='State wise no.of confirmed cases' w='81900' x='400' y='4625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8875' id='8' name='State wise no.of confirmed cases' pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' w='14000' x='84700' y='9000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='6500' id='14' mode='dropdown' name='Ststistics of chosen state' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' w='16800' x='83300' y='20750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38000' id='9' is-fixed='true' name='Ststistics of chosen state' w='43500' x='600' y='36000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9750' id='15' name='Ststistics of chosen state' pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' w='14000' x='85400' y='28625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='250' h='31250' id='16' is-fixed='true' name='Comparison of death vs cured of chosen state' w='52900' x='44400' y='42625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{22251BA9-618C-4126-AE7B-410DB68C35DC}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Covid 19 India'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D42364BC-E7FB-4DB7-8802-EE4D8E00A3D6}' />
    </window>
    <window class='worksheet' name='% distribution of confirmed cases of each state '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[pcto:sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:Date:qk]</field>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4FF2D3F-6B5F-4036-8F62-A3367AE2A2FF}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E96335D-DA0C-46E6-9831-496F1A462A5E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:Date:ok]</field>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[twk:Date:qk]</field>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85A156AD-60E4-4869-8E5C-A75C99385B49}' />
    </window>
    <window class='worksheet' name='% comparison of deaths vs cured'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{898D8876-8AF9-4C4B-8796-3D34AC8E756A}' />
    </window>
    <window class='dashboard' name='Covid 19 India Analysis'>
      <viewpoints>
        <viewpoint name='% comparison of deaths vs cured'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='% distribution of confirmed cases of each state '>
          <zoom type='entire-view' />
          <highlight field='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Covid 19 India'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{67DFC32B-BA2D-4A25-906D-21E4E98B0BDB}' />
    </window>
    <window class='worksheet' name='State wise no.of confirmed cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[max:Confirmed:qk]</field>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E7E0223-EA37-4FDC-9C38-F679294EB2ED}' />
    </window>
    <window class='worksheet' name='Ststistics of chosen state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]</field>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD9FACE8-2BF3-42F6-9A9F-57906D303962}' />
    </window>
    <window class='worksheet' name='Comparison of death vs cured of chosen state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[none:State/UnionTerritory:nk]</field>
            <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3982D21-1865-4289-BA74-15F771325A71}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid 19 statewise analysis'>
      <viewpoints>
        <viewpoint name='Comparison of death vs cured of chosen state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State wise no.of confirmed cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ststistics of chosen state'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1urngxh1fx86yq1aoc37312nnchs].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{CD31DFA8-0E0C-46ED-8A4C-8D749411B342}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='% comparison of deaths vs cured' width='192'>
      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
      /x9iSGMxEaZOVQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='% distribution of confirmed cases of each state ' width='192'>
      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
      RgEgWvt/m2HGibho1DQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Comparison of death vs cured of chosen state' width='192'>
      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
      /wGzi+KlclNCgwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Covid 19 India' width='192'>
      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
      e/M2FfHfNfvg2DX+4bvfI6mG6Z+/wXu5OM+Parz/7tvczgv84cVBzNggqpzjB9/4K96+vsyx
      TBXp3psMPvclUrqB6UjcuvkxJ8e/1HYegog/aFEcpZ4g/fmf//lfBCmI/k60w0GvfxQIQvBp
      LkfVduuibxVJOt0riiJbW1usr69z4sQJFEVplumzbbsZT+WX6YPaCOJ2rX3sNL+Go/LVr32N
      wtYSYV1jY7PIpCyRioV5fnqEtbzB+laGl04Mk3HjhO0yOdNlJB7n1JknyG8vsrbtcPHEKI4c
      xm4UOTk+Tj2fZeqZV/nq+SkapRxDU+fQcveZdXvo6Y0ymtCoCSHK1ToRWeTCy69z9vg4g70x
      rly/zWgqRf+Tz0M5w9joWFfvxF8S5nEy1l2hEEGrsBMBBK3ExyWvCYLAzMwMoVCIcDhMIpFo
      Wh0+TaWptcSi4zjcv3+fgYEB4vH4rmtd120WqvLEt06czs+IWk2CQSbGVpGpXC4TjUYpFPKo
      ioKsqrz5zX/mi+MDxEIKpYZDo5xlu+7Ql+7DrWb5p+sL/PevPktI16lWq9TLebbqIiN9PTiW
      QTIWw6pXMdUwugimUcORw4hWhf/y/m0+92/+Pb1hkftzyyQHR0iHXG7PLjI4fgwju0zZjTAx
      EMfVYli1crMa3H4IhUJNp55hGM158c/tUWBPLNBBZM92W/XjElU8gisWi5TL5ebEtCaRPC54
      hOaFHHgV2O7cuUMqlWoeV+RHN8rsfgugk9Lub7f1u82NDaofv8v5ob62Y7qzvsl8vogsirx0
      8ji62jlDy3IcGqZFRFP51cIqgxeeJZlM7qrhGUQXBxXr/DnhuxxXAfViu4Wqqk2a8bDHDOoX
      AfZ7SKcX8DjgTUgikSCRSCAIAgsLCztezwOkET4KZmZm6O/vZ21trUm4w8PDJJPJfWXTw764
      bn0drd9l1taY1DtXSD45kCYZ1gkpMj+9eZevXnwy8LpCrc799U0KtRrRUIi6YVKo1ahc/ZhX
      fvcruw7r66Tr7AeP7lpNwB683bRerx9oLr2yP61F0zpSTbfyf6vs6q9m9jjhui7hcLg5+Y8T
      juOwvr7O0NAQiUSCVCq1i0MFEX8rBzzIC2vVRQ46l16Owc/vPeCPLp5Bb5N7KwoCgw/NoVFV
      wbIdJHH38wzL5v3ZBZ4/PkEspDXH3DAtLi+scOWDyzRME9FxOH3hqWbpw1Zx0ZuHbsfu/7/V
      mtZOT/JKLnoVAj144pTrfpK6WavVdpLiD8u9vZfa6vQJkmEfF7yKwY8ToigyOzuLruskEomm
      P8L/Owh+wj2M46dba1wrJElieWkRcWmW/+H5C22JvxVnBtP8ywdXubmyvuvzjUKR/niUhB5C
      FAQEdhZOWFP53Mkpzrh1xhslntEFNt/+OT//wffJ5/PIshxoVOg0nlZfTOu1lUqlbe0qj8uH
      w+Fdp8J4Na+8gEqvfDs8PCXStu09J5EcFPvJe49jN/DqyHdbieCwKJfLxGKxPQfqHcTzeVgc
      Zt4Mw2DzxlVeHR080H2qJLOUzTMQDXPDdTk7OoQgCCzl8jw9udd6440tHYuQju0U4kqOjzBQ
      LHHl2lVOPXmOdDq9J/xDEARisRj1er0pkx/U2hgEy7IoFHZKN/r1Wk9kApon63hoaqudMvBb
      PYTtnEbeZ97nncpyPypc1+XBgwefigJcKpUCa9F7O523C7SbJzg8Azjofa7r8sFPfshz6TgH
      fWQyHOLLZ08QC6ksbWUxH1quxlJJ7me2Oj7T/zMYj5FuVLh1+T0e3L8feM5Dq/8oiPkGzeN+
      8N6Hn8hbiX5XP9bW1ppHJLXbeg7aiVZ57agzzgRBYHZ2lpGRkU/lPCrDMMjlcruqUnulQLq1
      lu03f/68YL9D8iALwHEcbr71S86HRBKhg89LzTT5+d05QorM2cF+rqxuULcsEAReeeI4qUi4
      q3Y8Gd2wbDbLFeZLVdThcU49eQ7XfVjFbm4O2BFPhoaGEEUx8ISfxy1G77JXehwtKCw1aAV3
      ysXtRt47LNbW1ro+A+ooUK/Xd8XxBzm0ghZDt2Pfbyc9CKxGg5h2cJGwZlp8692P6I/GeX4o
      TaVh8NLEEANhjb5Klg9nZql3KprsOtxb3okFKpfyrOUqaIrMaE+CV8aHGC1v88NvfoP8w1Ns
      crkck5OT5LJZlpeXWVpaassoH6cxRYa9piY/B2rXiU4L5HGu2lwuB9C0wnwaKBQKDA7uyNOd
      uNJhOXc7BnPQ+5eXllhYz2D1xlDl7nfdjxdXuLm2iWo2sG0XTXBZzSzzl9/6kGSsB217lfWe
      YU70xnn79gNeef4SqlViMbPFQFTlrXtrfOHFZ1nP5unXRLZMi+s376GlR/niqQG+/85H9Iyd
      pFHM8d1v/j3Jyad47cIo//z3f4elpfnjr5/jxo0bJJNJotFoV+HuRwXpz/7sz/4Cdju+POyX
      7HGQLeooBlKr1chms4yNjQU+19P2jzJoThAEGo0G1WqVaDTatRIcRNCddtJOzGa//t2+doVb
      3/sm8dkbmLUa27U6a/kCa4Uiq4Uyt9Y2kCWRsKLsWHF87Tcsi3vrW3z13BP0KVBwZAbDMpfX
      criNOv/zpbNs1Rv89pe/jFzd5trMPe4UJSrr9xk7dhajuM7N+3d4YMSozF9lph7hbJ9G0Y2S
      quaxkzof3LjDG/MFnr4wzdDFVyhnVshtZHjq5deo5TYYHRulr6+Pra0tcrlc82TMTwMy7BC6
      50jy5LCgXSAIh+V6h8Ha2hqNRoONjQ3S6TS6rjeJXRAEdF2nXC4/8nO8cWSzWQqFAq7rBi66
      duPtxM1bTaZHMWfZ99/kd6IioHI6ArZTplJz+OV2lePHj/PFJ47x3vwy784t8ur0JGvFEjXD
      JKppNCyLVDSMJIr09MT50RsfcO+eQEFJMiU1eHN2HQSLD+7N02NkSfcNcCe7ybkTQ5zoj/PD
      mxuMDg9ScBzGp0/jVIssV+MMpJLIbpWPHsxztypw4tgUjhLn+NQoxtoiZnGdt998C5dQ0wo5
      PDyM67rcunWLc+fO7TIuPC4Ia2trrhe85dV299DJNBrkA+hktz6K8AjXdZmZmWFwcJBsNosg
      CKTTaZLJJJIkYRjGgQqletd7eozr7oQ5FItFZFkmkUgQi8Wah3O06gCtY93vRQVZhh5VT8rl
      cmT/6a84F99b7jxn2txQEnzh9DSu6/KTO3OIosBTo4OokkTVMJBEkd5I+GEfXGq1GoWGxY35
      eV5JKlQtF1EU+ObsOiOjoxjbm5xPx5kRdF4/dwbLbFA2bHRNQxJAElwMZ+e8AQGXXyytM/Xs
      iyhqCEUWkRUFyzQRBYdSuU5I1wk91Fk8g4nruiwvL6Np2r5lYx4VwtramitJUvN40Xq9vsvT
      1mkR7Fe8tJND47CwLIv5+XmOHz/eLOPo2X5jsRipVArbtqlWqxiG0XR9G4aBqqqEQiF0XWd1
      dRVVVVFVtfm9KIrE43H6+vqQJGmXw8U/Tv8LaVcLKAit3x208kOrB1QQBC7/4mdcWr2FFtBO
      zrRZivfz1NgIsiSyXiwhIDAQj+651o+aYfLOzZt8vv8T77phO9zLVzjbG0MA5ko1lglxamKc
      wWQ8sJ1stcZtW+b0xWeaUZ370YE3H14NpUwmw/j4+K4q2keJphLcaDSQZZlIJIIg7Jzy57fj
      t4o6h3UCPepCkGWZiYkJFhcXmZycpKenp3m4crlcZnFxEVEU0TSNSCTSNC96VpxGo8HW1hbD
      w8PNw+Q8Lu/12WvLP45ORB2087UTl1o9o93Cf73Xdj6XIzZ/By0UvIgUQWB2ZY3c5iap/gHO
      Dg9gPTTfdnq2IkmIsoLjuogPr1MlkSd7P1kQx2I6mUyBykOPahDqpkViYORQHNxLKhoYGCCX
      y5FKpVhdXUUURfr6+o5sV9gVC+TFT3j6QKs930OQM8x/TevL71Z27hbebuV3sEiS1AyS2+/e
      1rghL3vLOx8tqGCvH50iEoMWQ7t5OQz8bd199y0uKQ7tMlsjksDXUyq4Lrcyy7y7usSWI/CH
      Lz6H1OEduDysZLfPexqLaMysr6NrKkOJ+J73WjNMBDE4waeTz8T/naZplEol7qcch8UAACAA
      SURBVN69y+TkJLZts7KywtjY2CNXloY2M2dZ1i5Hz37OnlZRx+8f8AbVmh74KHDdnRqmi4uL
      RyJaFYvF5qnkB7Ug7We+DBIDDyr7B1nfrl/5mKG1OfSAam277nv4+2xM46VkiCd0ifnt9ifK
      Azvyu6zQsDtz2dFoiGc0m5lbN7i+tDsfOF+tsahEGBoe2fV5K021MpJWWrFtm97eXqanp5Fl
      mXA43NTbjuLdy52sPZ6o43WoU+ZYkILn/2m3mxwW3nE8lmU9sqfZk/9bq7M1Gg00TWvKo/7C
      vBBcEMv/O+hvPwdvR4Tt9ALHcZi9c5vM+29yQWjQFz54CPigLHBzK8vxvl4AbMvkn370XRra
      AL/74vP0h2XuZ7bYLFb4cCvPVFInmugnJkOhXCUa0XftHnFV4dXBJDNbK3xrdY2eaIRUNELO
      sDjzxa80FdtuyuC3fg97I0EdxyESibCyssLw8HDTUuRdd9B8YelP//RP/6KVw7TKqUEvrbXz
      QWLOfrbtR1kIrrsTCr2wsEBPT8+h28rlcty4cYONjY2meOQR9o0bNxh6WPVgeXm5aW3yzMb3
      7t1jaGhoF0f3737dKsN+dNplr7/9Bn3X3uapEEQ6cP5OUESBJdNlYqBvR4y0bKquwhfOTPCz
      67MM6zb/2999l1dkgTfWNxjRXd6ZW8OSdfLFAn3JWKBolNIUpnSJtGAiN6qsbGfZWlujJims
      Li0yMja+53xnPyPpZi68ReOFMy8vL6OqKpqmsb29TSQS2XVvN5CDJjxI4dpvNXXaQVrRjSzY
      DRRFYWxsjPv375NOp4lEIrsiQ7tR1m3bZnh4mJ6eHhYWFsjlclQqFYaHhwHI5/PNn4GBAa5f
      v040GiUajTI3N4eu683Kb7q+U4jWC9l9/vnnmy+3G87fCeVyGefuNcb0R0v8kQSBlFnl7toG
      p4Y/KZmoRXqQuMPffudDKtlNruk6RaNG3YxxemqKlY0MDaPBuYnhwHYFQUCVBFRJJOq6DAwl
      samxdOVXjKsyv5y9y6lXf4vB4eE9epbf0NIK/3WeIcNxHKLRKIlEgoWFBTY2Nmg0GiSTyV2J
      UUF0tkef22/CguTX/a5r1Qfa7SRHoRSqqsrJkycB2NjYYGFhAdgRkaLRaFeZYsvLy8zPz3Ps
      2DE0TSORSJDJZKjX61y/fp3JyZ1qdN54vIWXTqeZmppCURTi8Tibm5s4jsOpU6dIJpPN7Ci/
      GNlJ7Okk126sLDMmPLrSB3AmolJemue9uQUc1+HW3et84xe/IJGeZHRkmHPPPYs9MUVieIir
      FRiIhZvHrHYD713LgsBULESvJvOlsE3lZ9/i3R9/n2ql3Nao4qeN1h+/XuqdQjM6Osrx48eB
      HVoolUqUy+WumKwgCLutQJ0sFwc128Fee7nfnNpqUz9M+x5c122aQ4vFIjMzMyQSCU6ePEks
      FmuGMrTD6Oho09O7vr7O+Pg4lUqFUCjE0NAQy8vLTeIfGRlhdXWVer1Oo9GgWCw2/RL7iXwH
      lfk9bGYyGG/9mOFQd4kt3eB8TGWtuMltWeJrr/0WJgqDiSjLSZULDvT39OA6Nm/evE2PKvLC
      sZ35Oex+rYgC53siNGoZ3vnlT3jyS1/dN2xlvx3BT0NTU1NkMhk0TWNzc5NYLMbg4GCT1jyR
      tPUkUWF9fb3rAzK6VeI63dc6sP10h8NAlmUWFhY4e/YsgrBzbm2pVArsrxc/rigKgrBTesXL
      LLJtm3A4TLm8w7F0XWdzcxNZlkkmk1QqFWzbbmYb6breLOdRr9e7StSpViqUikUGHoYEt8I0
      TT7+x7/hVaF6aOJrh6WayVq0l1LDYH5zm5dOTFFZW2ZLCvG1Z85jOw6/unmHl5Mqknh0T88b
      FtcaIn0vvsbwyGhHq1C38BgU7Ji1V1ZWiMfjrKyscO7cORYXF2k0GoyOjqKqatOE2tW+dlCi
      bLe97SdGdVKyDwLPpl8qlQLr9vvRaq5tTXyxbbsp29u23YxCtSyraYkSxZ1zsfzP74b4t7e2
      WPnht0ibFe5deIlTzzwP7BwhupHJ0KjXWJ25x4lGESF09En/BWtn8cob63wtpTG7vMBzCZ2f
      WzKO41A3LWqmCcLRZtwlVZmXFZfFd3/M1fQEjqwyMjVF//BIx5NFYf/UUo/Lj4yMcOPGDfr6
      +piZmSEcDjM5OUkul6NUKjExMbHTbiaT2ZMQ086kGfSwILRVOB5TuZSg59+/f5/p6elH1jOC
      4n9axbaDjsubnzf/+v/hi8qOJ/V9wkSeeYn161dIbK0QFiAmCwyHFOQjMBsHoea43K8YaKLA
      ycgOkTdsh38q2PSqMuVaja9OpIkcILT6oKiaNggCq9UGmZGTDJ08TaRL3c0P/zvw3rlXN8r7
      zrZtJEmiXC5TqVRwHGfHCuT3bB5UrAm6p9s2PMeGaZrUarWu7ukWXkL2oyyA1nuP6uA3URS5
      f/cuT1hlhIcJ6xedCrm3f8ApVUKOfzqJProocC6291kTmDwXlvlF1XqsxA8QVnban47r9G8/
      4M4Pb5N79nOcPH1ml8PLk929YLnWjDy/X8H77Rkh/EYYb+fWtJ3qFrsKY7VGOXajAB9k0bRy
      Si9ep9FoUKm0P9n8oBAEgbm5OY4fP35oom0dV6vy5KHbgDb/HG6srlD40b9w7tOh80PjQcVA
      DOtMxXUEweHGwiZnJwZZyGwylErgCjKq6FK3XMJqG45dy/N/v3OLsB7n9585TVINXlAz61uc
      GEwDcDVbYUPUiI5OQlRh89Z9ekZH0fsG2ZqbQVY1jl98doeQH5ZB6WSG70Sfcquoc1CO2Wr5
      aPfATo4wL2P/qCBJEpVKhVwuh2EY9PW1r4zWDp0Uddhfn2mH7MYGhR9/m7OqC0eu1h4tJsIK
      VwolqpbNk70hFjcLnJ0YZKNQ4M6DW1zPx7g0KvHG/W3+/eefY2H2Plp6lGcGwyyub6Glhpii
      wukzT3HC2OBudps+y6YgadQ2l6mEenn9+ADv3brNm5k6f9Yb5WfX7jE+Nc35RoY3f3WfsmjR
      a9io9RJb92/z4lMXiIY0Zm58wHy5ztSLrxJ/GP8VZPr0/w6iTdmvJPrFmqBGgiDLctP64TgO
      lmU1I0n9CFJuTdNsymJHCcdxOHbsGLVaDVVVyWQyhz7ku51oeFDCFwSBWq3Gwr9+gxc0B+E3
      nPhhp/ZPShZZbZhACHDBdXEcl9MT46TH+pmON5DUNONheDdf4r35a0y8OM6NfIivjSlQgZ9/
      8AG3wjpffnaMn763xb/7/Al+fK/Im2trDIhlSI3zFBmu3LnB24t5PsyaPBU3iUb7GBUdekdH
      mFnL8cLJMa4trfLa6ROcHR5gvFbnyvISvel0oHnUQyfztKjrOvF4fI8HtdV51Qpd14nFYkSj
      0V3hAaFQqBlS3YpWYvLq+hyFQ8wPx3EIh8P09vZimuauIkkHRTtP+GGsVWurq4y4jQOR/trm
      Kt++eoeFUvuw43bYOgKxsmDZXN0qcTffYLm0zX999yMeVCCsyFydmaOOyP2leRYzGXJyjMGo
      jihrPDU+iCrtjPT1Z5/lf/mt5xiOqJyeHCPmVllvqEwnoriSyJ35ee5ly0TDUab6e3np2DDj
      /b3kchnQdIbiESKKREKVqBULzfPOdFXByaxy9fJ7O9ashz+qqu6qsuEh0FlbLpfdSCTSjIEP
      itXwN6AoCqIoous69Xq9SWytps9yubynTqT/78dtEfIG+ODBA0ZHRw8cMOc3qUFwKuNBIhJF
      UeSjd97m7P0PScjdj/3anRnCQwNcub/M7z91klK1QTgUYnN9i97RPsxqDVFSiSoC2WqDqKbw
      xuw8z01Ocm15iSeHBonqOpbZoGYLpHSVmmFQt116wjqdzPt12+Fvl7KciIYY1iRWK3WubJeY
      SiUYSYSp1QyeHevDrNdQNZ1avYYoq8RUCVcQkUUBHBvDFVElAdd1MG1QZYF8uQKiQiykUKxU
      EWSVhCaRq1SRlBCaYFMxHeIhDVkSMW0HVZZYrxn8YrPCv335EtpD7/RmucK7K1tMXHiaUi5L
      aW2F8597ncjDHO52+hvwyQKAvRF4tVqtKZ97FhtP1NkvPKJWqx25ZWc/iKLYfK63mGu1GqdP
      nz6UmOUPYTiKBVCv1bj5i5+QWplFE1wGVJnIPovh8vXrrCthGg2X18ei/B8//4Ce4ZO8nlaZ
      HO/jr3/2Fut2jK9Ox/j5YpmvXzjO96/e5NKps2Q3F3ER0FITiJv3+O7MJv/jlz7Hx/dn0B2L
      py6+yBMdSv240EyKuVOss1ip88XeCJIgkKmbCMBHNYvXJwcIP2ZrkYe1aoO3Nookevv4nfOn
      m/NvOy5zm9sMJmLUDJO5UJJaMU803Y8kyYyOj6MoStPi6OWE7FoAQfBiLrwklG63/k97AUiS
      xM2bN0mlUnhinZdsfVi0xvC07mD7OQhblTKvL7lsFssymf3lT3nNynXsw5Xbd8m4Lmqkl7hZ
      oC7IXF8t89xglJ5EiHvbVTKZDM+fO0VmbRUj0odby/HqieN8uLjMq+Mp3lg1yW4uELHLOIPn
      Scomp5QKD0KTXAjOZgR2iH+5ZnK3WOVUWGNM3xuKsdEwWRAVLg308JjcFU3cLVSZc1ReOjWN
      KklENLXt/GeKZZLhEIXajog9W6jg9g9TXF7ElBUuff51Cvn8/gvgsDBNk1KpdOTttkIQBAqF
      QjORfXh4+MiU6tZgrNbYpv0WV6tZuXXBfPjD7/FybqGjTpAvlgnHo+SzOQRZ4J0H60ylU9xZ
      3eQrF6d569Ysvak0o1GJN+cyvHz6BFYhw0xN4XQ6wmBEI1N12NxYYtuSODEygio4xEWLihSl
      p014UcmyuZqrEhfhyViobXaY47r8NFvh1WPDj91nYDoO72wUCaUHefHksQPfX6o3iOshPphf
      ZqtSZSQZf/QF4MXS+CsBw2494HHCNE2Wl5cZHh5u7lJHhdagPe//bsWfoF3DgyAIvPs3f8lr
      cv3A9iDHMlguG4wnD6/cd8K1Qo2qYXI2GiK2j4h2t9xAS8Q4njx6JtoKx3X5SabEs+eepC92
      NGN/ZE20Vqvx4YcfNstNeziKoLZuUK1WSSQSTc/e40LrCfLdOABb58C/iErFIn21wqGMoaKs
      PhbiNxyXK/kqA5LApYROVNo/8DFrO/RHPh2PnigIXEyEuL+8SqawE9w4e/tD/s9vfpdvfzSD
      aVQpVuvMrmW6b/NROyUInxxK0IpQKPTYrT1e5ObjIv5OJuHDRC5690SiUbKxFHaAefWozcLd
      9uuXGyV6RehT9x6ZFYTFmoEaCRM7QK7Ao6JPV3lCqLP1YIb3Z+Zo1BX++A++DIUNisUs66UK
      N+9c459/9QE1y+Cty+/y42tzGJUSs0sL3FrdrXMduueu6zbr7nhBRq3wKjXAjqjiP5jgKOC6
      Lqurq0xOTj4Wogmych20UllrYKCfwI//9ld5+4ffwWrUGbPrTEce7zkHnXCtWOfpmEZK2Z9h
      ua6L6bjMNWxeHOygRR8xXNflWr7KsrmTuC8ZeYzSGj/49grjfcM0ikW2RQlHifBSn8EH6yab
      29tcm7/JoPYyl7cM/uOl0V1tHmoBuK67K8kk3eKJ8+AnHFVVURQFVVV3eZ09z7GiKF2fBO/B
      NM1mleiDBPHJsoxlWV3dI4oi0WgUQdipldQathEUCuJHJ44ei8e5+Mf/CdM0mfmH/w94PAeB
      d4OoLLJtmPSqId9iJdCyc7PcYMMVWKxbNFa2+cpEcKiJ6+6UWNmvvEq3uFmoEx4a42vDg1i2
      A7hcf6/EgKpSzeaoD/UD0JdKMZAwuJYvU3QkpofiNCyJi6em0VsU9QMvAI/zt1ZNy2azzTrv
      7eA50vzwV6Xz2vJ2FY+gZFmmVqsF1o/3//Y/p/UzT0eQZRlFUSiVSp8kRTys9iAIQvM6L0nG
      r+x6iS7+5+z33P3gRTg2QhEcu3BkxHJQTIVV3q+bXCvWiEkiectmoWHz+33RXVUgNhomRiiE
      XWtQaxgs2w4ufTwoVhmP6ciCgO263MtXWMyVGElEdxXUOgw26yZXSibHx8c58ZDI5YdFAc48
      /RyD5QZ6OEJMFRlFBLcPQXR5vU+iMvgCgqISVlWEltNQy/XGwaxAXhhqa3aVR0xTU1OP9TR3
      f5lDy7LY2Nigr6+vSbhAk8D9DiyP8FutVN5u023sueM4lEqlXWJcq2UnaAG0hu22XiOKIpub
      m1R/9M2HQXK/Htiuy7ZhUzBtQpLAYtXgiZBM2hfpWbcdvpOtogPPxjS+uV7g3GAvH23mOZuK
      MRkPs1quk7YNpsMab5UNXhxNU7YcSobJ8USE5XKdum0jCwITMb2j/navUKUU6+XpqYkm0R8F
      FreyfLS4erAdwLKsXQnHrutSKpXo7e1t1hR9XPDvHl49Ty8OyXU/SXrw+rBf6IO3KA6KTgu8
      HffvRPze5/39/Xw0Mo29ca9j1bbDwH7ozX1js0REkXgmGez+lQQBSYDbhQopRUITRZItIkPD
      cRmK7tQGisou/3ksxVrDYCQVpmBbqOUyPZbD6ViIiu1wu1AlU11Bdl1C4RDDEZ07mRx9okvG
      sFgqRXh+sAetDXEvNhx+6/z4kRJ/sVbn5toGXzz3RHcLoFXmhx1CuHfvHoZh4Lo7pUC8shSP
      2/wpCDvFlo766KVun6vretO/0Ro7dZixeztV/9QxlhZvMRngcX0UfGetgCyAYVjcduCZZHhX
      3U8/NhsWY5rCxYS+5zvXdfmgavK5iQEKDZO7G1mejmocC+82g3rH6YUlkf9pJInjuliuy+2K
      wZuzK5yOqgyFVJ5kp4DvGyvbnO9L0K/vNQLIjo1p2ygHeNeGZZMtV0jHokiSuMfUvLSd49Tw
      AFFN624B+GOCdnVOlhkYGMAwDMbHxwMj8D5LEASBcDi8K0TCMIxdhXQPmzjkui6jk1O88X4v
      ESPLRt1CEMBxQRYgLEuMH2JhWK7LZsNiUBE5EdWolg1+uVHCdB1OxHQmwruJThIE1k2bmu3s
      KbsoCAJeDwbCGndFCQcIIk2PGSiiAAhowLMBiyopizzp2NxZzvAgHkMSBcKSxOmeKIIAZxI6
      NxaWef5Ed57f+UyGXN3kvTt3OT46RlyVeW56ClEQcB7O/+zmNl975jzQpRIcZLo0TZNQKNSM
      uTFNE8MwHrtD6jcB3k4QRNDtzg5oB88iJQgCd27fIlHJsiZCOhJCFgUqlo0iCpRNh39YLXA+
      ptGnyaQUmS3DpEeRd6Iu2yBrWBwLybzSE0YVBZ6M6SAKWI7Lu4Uao7qyS+SSBAFNltg2bUYD
      xA4VF9N20CSReFjnZ9kCv90bObQZWhAE+jSZXjXK5UKFQU1mrmaS0GRGIiESqsybq2uIkozp
      OCxl84ylkkwPpOmLRVnO5kmGdWRJ5O7aJu9e/pDYSA/iVonxlwb5/s8uo4oui1slVD3EwvIi
      05PHeefKu9Tt3s4LwONwQYOTZXnPaSy1Wg1FUT510eTXBU8vCap9KUkSlmWhKAr5fJ5wOIws
      y1QqFTRNQ5Zl1tfXWVteYvn2TS58/nU0VeVe1eQ/jPcEvpiTCZ33NktsV02wGyzXDSZ0lRdS
      7Y0YMVmi6rhNGdszP18p1dAfhjnUbYfQw+83DZMJVWKkTQ2iIU3m2naRAV3lYl+cn1drOzpG
      m+cHZWkFQRTg0kPdZNF06A3tmMu36gajw8MMppKENZXzEyPUDJMr88vgQkTXeG9uEV1VODM6
      xG9fGObadpRzLyW4f22JFy6c5Zvf+WvubNb4vd/5NxTXVrEmTj48CKSye579kZ7eWavt0hW9
      UuL5fL4ZWurpArFY7DO/C3jwdgLPvwE786DrOj/8l29QW7hPvyohsWPl1wUwXRcbgR7J5aKu
      MipbzFz7mFApy38Y60FpY01SRJFXBhI4rkvddhms1LFNE9t1O5c7FwQqlkNE/iTBXBGgV1O4
      UqixUjVIazKbdZPekErVsduGaIxqMo2qgWNZ/Ot2iZQIkqAERgkfZldwXZeQ61AybTRNZq1m
      8uTJEWL6JyfghFWV545PYDkOPWEd23ERBJBEESt6kn+9/CNeOP91Ln/0Dzxx6o84d+IsX/vy
      KZKxOMXE0/xy9gFff2qUtZKGUCgUXL8J0XGcpse23QBs22ZjY6PpTPKqqnncRVGUpvPosw7P
      QOBZlGzbZnNzE8s0ef+H3+ProcaO/PkYzroqmRYfZAqYjsMX+trb2uu2w+WtEq+mdkSV1YbF
      Us0gHdGZK9V4vSeM+dC7u1AzGAkp9LZLcvfBdBwkQWjru9iP+7dbND/PVnh2coiIJPKjzSrj
      oyM8NTG669q2c+k6zC5nmBwbYnV5hf7hUYxihsszq5w6eYKNpVmExDARsca/vPXx7qoQ3Thy
      BEFgfn6ewcFBJEnaUzLcWwT+BJrP+kLwz9mNjz6g8OZPcCwTCZdL6VhgQs1RoW47vLWe55Ue
      vW39oO2GxUKpxtMJnart8EauSs52SEgSl+IaqS6I/ajhui5v5uuM6wp11yUsQFKWkASBNyyZ
      cFhHcyzOnD7DcjaPLEucGurfl5b2y8+YWd9EEgSuzC9xYagvWATar+NeKZN4PL7rof6FYJom
      hUKh6ZiSZRlRFD+TC8Ibj+M45Bfn2axUKboir6VCbTm//+DtR4Em7qQeLlYNpsLB4eAV20EV
      BX760cecOHueM6rB//r+Iv/7Fy60iE4mt9crgMXphyVK2qFaK/L3l28h6DH+4Kkz9CjB73R+
      Y5PBdB8hcTd9NWp1Fip1+k6fpSeiU6obzNYb1BsNvnB8snnOsSSKJMM679x/QKFWJ6KqKD7f
      RDe05LguW8UyC1tZ5Ife/xfGhxlJxA4eCiEIAqZpouv6ns89+AfqHbvkd1B5oQ+fNYVZFEUi
      w2NsVhu8kl9kSJM7Osc6HbXULQQBXuhP8JOVLLIgMKYrnzAkoGo5zJXrnAmrlEICt5ZznFQq
      jEYkzFqZf74xw7GJaZ6MwT9fu4MZGmBMqXJ7eYUzx6fRBZvRmM56vsKtlSUaoV6+cnIYy3Z5
      9sQpBtQSV+a3GYrUqBIhs7GMGB/gtyd6+NH1O8yWHf67eJQf3LzHiclpwvUtfrVa44snhphZ
      W8K6keDfvvY8o6meDmMUeHJ0mDfvzSEIAl++cHrXPAYtAsd1ubW8hvNw97XqDSaScXojOpLP
      mSn9+Z//+V8cJHzBtm2KxWJgrR1P/OkUDuCFNHjRoUedxPLrxtDoKIoeIjs3Q7/U3SkojwpZ
      FEgoElcKVYqGTa8mIz9UfN/fKvFSMkxCkVgt1HHsKmVHQBIExqMqdzdyfLRWoGHW+d0LT1Ct
      Wri2yYsnx5hZK2LWShTLJWqhKBvb29xZWWZwYISI0OAbH15nqepyqkfnZsXk5cE4tzJb3FxY
      x5Th2OgUfZLJ3OIit8oGS/kKslVDVnWGojqCK3CysclbWYNUPEoivNdP4EFTZCb7UsxvbXOs
      P90xHx3g6uIKhXwR2zARHJtnx4aJaOoefeVA/mVBEJpH0xz25fnlYcdxqFarv5b498eJ49Mn
      sE9dpGR3N658boP/95fv8bfv36Tks6Y6ZoX72+3LusPOfGYKJQbCGl8ZSzORivLLbJXNhoXp
      OGwYFoZP1JpQbZYtnZAI2XKJiiOSVCRCgsk/fnSL5aqBooXQ2LH1T6fC/HSpxIRkkqk2SOoy
      tbqBi8TrZ8/yny9dICUKnO7voV6vsVUzSYUVYorMT2/c4uONEn09cXRJZjqdIqVr3FtaZK0h
      MpGI0K8pPK853JqZbfaxXf6FLIrIkoRh7X/k6mahxCvHxnhxapRnx4IP9QB2K8H7wTAMMpkM
      Y2NjHa87yLYuiiKRSKQZzPZZQb1e48MffZ/h1RmGlOBkGhtwBZEffHSLzz95jEyuTK8CJTWC
      UMkS70mwnYdCdoEbBZvff+o4M3PrlDWdUHmDB4bKc70h/vL9m/zhq69waTgJQLZu8lYmj2Tb
      nAirTOoKom9n9t6MAA9NiAKisPO3KO6U7KrVqmiaxltXr6MOTfFUTwjTstA0DcMwCD8sixMO
      h7FMi4ZpENI0XIRd7X3ytwOCgOC6OAhN553pwi+qDuPHpzk3vnOgXtBcebiztoEoCkz19Tb1
      hKBr66bFu/fnScoSI4koMU0LPORD+pM/+ZO/8KI7VVXdE1Tmh1fnx18KPAj+7anTKvXnBPif
      /VmALCuMnTzFViTJ7NIyUbPedEZtNizu1BzW+yf5OFehkVnneF+Mj2/P0JBkqrJGNbuOFguz
      nDEolLPMbm2hRiIsZRr8ztkhrs6vcSezyYnjp5hKRnhxcqj5bF2WiKkypbrJhVhoz/vw/4ji
      jhnT+9v73DR3nHiDqRQTyZ26UbguYV3Hfujg86pueE7AneJoUrM9Qfgkn0AUBCQvrdT3/A9q
      DsfOPMnpkcE99BLERMOqwmquwM3ldY4PfCIKtV4rSyJT/b0gitzbzLGayzPek9i7q8RisWaU
      Zy6Xa8biy7LcPOwhEok0a6p0K6/vlyjiv8Z1XarV6mfOdyAIAtOnzzJ2bJq7169xY20FNlbp
      f/Y5nj53nnKxSOrb/5XoRJK/e+caoqBwNqHzvavXcV2HPxofwsGhWDfpiUbRRJGpoTQqNsWG
      SToaRRHhwfIDlFiK54Y+OSM5pcoYjyBZtsrYnmnbX/bSe6/d+jj817iuiwXUk2mO9fd2vN9P
      PyFVwbBsnpoc7YpWhnoSuK7L/eU1TMdBbZF29ohA/gHbtt3MgjJNk2w2y+DgIL29nTt8WKiq
      Sjgc/kztBK3w5u2dN9/EWFvkYmGFkBT8It+7/jHx8Sc5neg+CM52XWaLNZYKFc6GFfqO2Mbf
      6twKcmYFXevBcV2KtkvNcbltS1y4cJ6hZPvDzf3tOo7Dj2/cpS8R5enJ3WK4Zdu7rDsA64US
      ybBOSJFZ2Mpyc2GZzx8bJ6p9EgC4Z3b87nxB2DmS0kuYGRoaYmlpaVeu3VCSigAAIABJREFU
      71HCC68Ih8OfGZ1gM5PhxkcfcPbpZzFNgw/feZtotcjxepakSDMGJwiXzl3c9b/jJz6CiU4U
      BD7aKjCtdU/8nTy2+0WwBt3T6b6PGy7a8DiG4/D5qXFCXeRkeLRYqNXJVWuEVYVriyus5go7
      hC+IaKrC62dO7Lrv6vwyYU0lFQ1zfKCP8kAf68Uy032p5jUHYg+u6zI+Ps69e/ea5+keNTwz
      6WdmASzNMzZ7hZntDJF8hmcVkZQsIHSRfO6H67rMKHFyksbG0gInQxKn4qE91wmAYbscCx8s
      wd4vf7dLNQ26p11fg1B3XKx4Dy8cnwy8t117juNyZXEJw7L5yvnT2I5DpWFwfvQTa+QPrt/G
      dV1M20aVZVxAliVeOXmMTKHExw+WaFgmtVr98AtgpzMOo6OjrKys7GsNOgwEYafMymcF0+cv
      8tGD+zxVWEE+xMnuHiwXqj39JPqGGMqt0q+1b2s0EiIi7YRSd1OtrVXef1xhGz/MN3jhubF9
      jSMePOKe29gCBC4dG28y3WRYb35fbRjYjsv7swtUDRPDstBVFdt2wHUZTMQYTMS4ubLOXLVO
      plShLxpGFITDVYUIhUJN7+5R6wKapn2mvMOqqnL+K1/nznf/iZOlzMMEkYMjZ9qkTpxhdWEe
      TBs9gMObtsPd/P/f3pkFx5Ve9/13l953NPYdIAECJAES4DIkZzhDD6llKCu2LFckK3FSVqpS
      tlNO8ho95cmvechScVyxy0lUimTLJVmKrJnRzEjkDDUckRzuOxZi3xq9b3f78oCFANggARIg
      SPD+3tC49/bt7nO++33nO+d/cgyPpfmJbmEKwe/sqVjzez4ufF1qarR0F/ZJdpAxLWobGx+7
      47sakgRRv3dVp/G6nHxpbwc5TSPocaNbFp8PjtDTWLfsnD111TSUhfnJpWvUhQKc2NG4/p1g
      YLGd0UZrii7sCWynSBCAw+kk0NjKWCaPMTuF9ymcQJJg0umnpmUHgzevU+eUH2ldOpTOce7X
      o7QM5PDHNDRdkI46KJomLlnCuYbfWbMsBlJFkjNFboykmdRMKgPOZTlD2nwWKEDetOjPasRm
      83z2YJCzAxNE/G6SRZMcoMUTxBSFEUulqXUHQe9cWDadmMVweBDFJCldxVNiSihJEpph8mnf
      IPsaaxfLIoVlcfV+P1XRh1MZWZYW5dIVSaK+LFxyn8DtdNBUXobqULk6Mv50uUDT09M0Nzev
      99Qn4vP5tm0EyB8M0nbqNHeuN6Cfe5eapyn7lSTqGxvpq6hGKaUqLcmIMhe3az2YsQKdw0Uy
      Z6YY9cicDzo4vi9KlVPFIUtz0ufMGcuCaVtC8JP+BL47aXx5E90hc3Wnh52VXnwKxA2TX9yd
      RdMFLVVeKnwqnw6nqRwp4E/HOS+72FlbxvvXx7g4MIQzp3Kkp4aY0c+Uq5w/a63hO9/7v7Tt
      PQqD55mu7KJTGuLiZIh/frKJ4VSAWxc/wl3dyRc7/Pzo4+skfBU0FAb5D+eu8G//4At8+P7H
      tHQf4v7nH/PLX1/k9O9/nTbf6jlXy7++uU+aNEwmUAl3H3g6B1iq2bMRLIz8T6PS8DIhSRLt
      e/ZyPZ3Eee0c0XUshAddIToOvoZpGAS1HEqJ0GlT0ENLjZ/4hWl8BQtFgGII3GkTK2NyoTCF
      CDtwqjKmmHMAR0DlK01hJEniTrKApz+LPz+3saWYFuVZi4/vJzA1EyOp0xjTkQXoQ3keuBRa
      iiZuE0zJjScWo0GozBY13pLrkZ1pJoY1XLvqaYy4uTOa4MShfdwcSvCVQwdRm3oIZqLUFWup
      dI8zlHJwZH83fRMxro/JnHr9CP/r4zOY7lr2BBJMZPN0dPZwpL0Wl3aAvQGJQeNhHcqTmrsA
      9CfSePb0cmJ+AF+3xSWTSUKh0IYZv6Ioi/ImrwKyLLPntWNcSMRxj9x6YoMMzbIY1cDY24HP
      7yedSpFPpxCh5bXX6aLGmbEk+cszVKSMRyq6ZAGVMR1iOoK5aJEAhssdDFZ4MQVcGk5Tl30o
      PqZYUD9cQPCogrXTBGfuYeKSLDnZ5XXy4fQw+yM1hCUFJB8O2Uk2Ws6J3p0EXBLvXunnWFcr
      VRUyP/rsN/zea+30X7pI5ZFOdlR6eHA3yZVZjTdCBf7T//k+J9/5bWpy48QrdtAUDiPcc8bc
      WFWFywXVLvmJm2gLZIsa2Yp62uabZMM6c4EAhoeHqamp2bDROhgMbvuRvxSWZXHpvZ9R/eAG
      FSWeBKYQ3C0Isg1tNO47QH1j42LayEc//0f2jd4ktOS8gmHy8dAs2cszRJLGI9dbjYIqMVXh
      wJmzqF7HeWtBCMF41MWpPz5NZXBtZbID0zES2TzNAZVLA+O81t2Nf8nnXM/Au/L9iobBVcPB
      kbdPLv5v3RPuBcnAjcDpdL6Sxg9zT4KeL7xD+vApLucFWcPCEIKiJRgsmFz2VdP4jX/Fsa9+
      jYampsUfTFVVjv3W2wzw8DcQQuCUZd5ujmI2+lnPs9ltCBrHtQ03/gUq40U+OnflsccIIbCE
      4Pz9QSaTaXqa6oiUVXHywP5lxv8kVqbfrMSpKGRGh5aJOazL+orF4rqEaEuxVEHB4/E8tZjU
      dkBRFDp7DpBpa+fWpYsY8RkIldGwo41dj9lj8fl8aA1tiPFbANyMZchqJi1hD/nUxqlvbwSK
      BZlYuuScfNkONFAwDF5raVz1WutZ6K6GiiA3L9ww9/c6iMfjz5QCoSgKgUCAXC43n30oLybe
      vcr4/QEOvXlizYOBEAJjPr2YeaO4d2mSIYdM7cT6O85sBkuNVcsVmUqlqQoFS/5/4W9Fkpb1
      SzD0Au+f/QR37S5O7JpLlU6kkzhUHx6XgjwfBtbSCZIOPxXux6sSjqayNB05TuWSntFrfr5I
      kkQ2m33qnrsLeUULLVY9Hs+yUkmbtdW3AuSyWaYGB7gwkyGmmYzF8tTNaFSOFVA2ZxP3iSyt
      +Ftq3Loi4UTC9YRBTpIkKoMBYpmHvY2TepGW/UeJZAe5OpVnemqMM9dvMptJc/nuEInZKa4P
      jpCZneLzwSHuTcxi6Hmu3+9jLLm8kMgSgpFsgfrm5WkYax56LctalE15GhaaF8ND4dq1bonb
      LGd4eIjJG33cjoaoSScwJzM0swHtfjaB4Tof+072EPatXkMi5vsQFHSdsPdhGkyZnKKsrIE4
      9Vy7fY/behFVNrGEzuRMkvs3PyUfaaGiOcjkbJLs5AghRzt/+/N30cta+fNvfRmYK8a5mciy
      49ibj6xf16wNOjo6Sl1d3dN8BwCrdu62WT9T9x/QejtF0pfHkgRVCf25TXus+SDqWp2tfixH
      /+AYB1tLz+3vT0xzZXiU8oCfMq+H830PqA4HOdTSyIwR4sqNPsypQeobm5malvDJDwfgw70H
      OHv9JgMxN10dHThm7jMyOMzht07yYHAQIQQF3eDObJL6Yyeorql55P1LOoAkSWiaxtTUFJqm
      4fF4aGxsfOoFsCRJOJ1b1/5nOyGEIHa7D59hUZnUnvv7Z5wSQ+VOAjkTX9EimhePdb64WyJc
      trpoV8jrIez10lVfw4WB4bk65tScBH+Z202lVMDR0UNHdRgX95gVYSrDYfx7vWi5GG07u9jX
      VIWpupA9rThUhfzNflqamvhsKoEjWkHDsf0ljR+W7AMsyJ3E43GSySRut5vKysoNMdzNqh94
      FRFC8Mu/+zH5//L3qEuK7p/X0zTmV9h9ehcNQQ83plPc+fUD6qc0igo4DYGhSMhCoM4P1EKW
      SERc7PrWcTrrqkuqyF0eGqU5GiHkcVPQDVRFXrMc+tLPbQrBrViKXChK664OouXlTwzZq6Zp
      Eo/HyWQyKIpCJBKhqqpqw1NiX+Vw50YiSRI1nW3cUxVUc3Ni948jLwt8ThWfQ+VwbRnhEw4u
      XB5GKfeipnWClX7krI722RhOEyRLEIgXuPCDj8n/zmEO7mh65Jphr5uReJKw14N3vlprvTON
      WC7PIE46TnxhXYOtmkqlcLvdRKPRTcsHX6gZtR1gYygrL6cY9uKaTC2+ttnf74xHwikk1M5y
      an0PG+m1lflpPrELeaHYHZjJa7x/e4rauEHerTDZVYURy1AZKj0VaoqW8aOLV9lbV/1U9zad
      yTFbXsfB/T3rTqlRI5HIpufhLBROb9dMz+eNx+cl67HQTZOoojBdSOFz+vHOqy6Ylo6Gimcd
      addC6OQsBV+JEk0hQbEpwO7uekIuB4q8fBPLsUJJJJXX8OYtTAn0I8384RePoptzRSqlkCQJ
      j8OxmKO0Et00GZlN0FIRXfb6TDrD0GyS4N4ednfve6oBYNMtcmUXSJtnx+/30+8q8gs1DQjO
      zPQxpRtzKc5CkNdTjBYNrPmYvLUiRr/yNUsIMDPcz8+dU9SLDOZTi/9PKYKy5gi7yvzUzHeF
      f9zvOVvQMWTIuhXaunagKvKqxr9AZSjAWDz5yOvn7vTx408vcn9ggNtjE4uvD8fi/OraTQrl
      NXQ8pfHDMzTKfhxOpxOXy7VhOUM2y5Ekid6jr5O+83dM52N43BVICN4bvcwdXeUbVZV8PjvI
      Z7LCV6Nl/HD0Ll5fLbudFhO6yQ6vj19MDlATbiaoTTKBn69Ew9yID3I9KXHQ4+TXmQTHypu4
      Fx+jIVzP+R/8A98vr+M/f/s0/iX3UYqWMh+3PQqunEU8lSl5zFIM02I8kWJv3fJITaZQJJnP
      c6qhgqDLwbnRcS7mCzidDuIz09TV1nD05KlnGlw33AG2o8rbi0g2kaK9qPJpKs5uvw/MHKqz
      gkZS5IREb7SZrDZLUsvTEWmkL59Bkv0cL6/iQXqU3rJ6+ooFeoK1iFyGlGGwN9KMw0pS6/Jx
      yOmnwenEDNYRijp4ra4HNT7LLPCkXICI28mBt3dyezxJ3jIZT6SoCZfuKJ/XdN67dpvX21tw
      qsriWkYAZ69e53BVhKDbiQQcrasgWdDIaznkYJDak+88cxrNhk6BFjrB22w+Lbs7ifoCdPii
      VDr9RFwBwrJGja+cqNNP1KFQ4w4QdQfI6nl6QpVUu4M4JKh1B0joOvuCZRimhiE5iLgC1LgU
      Kt0+PA4nOS3NNY8K5T6q3trFrjC0tO8gvIZ7UySJzvIgv7u3nh6HzsxgH8OxRyvYhBAMzsxy
      tK2Zcr+Pkdk4P7lwmbymMzAdQzNNyjyuxXWBLElEPC4sVSVw7CQV1aVj++thQ58AS7uq22wu
      VW07uVbmY6ehLBrIgWjL8u9fnUs/OFm5fMz2u0KcrFwIFQZYCEy6FYC5c2o7dhF8rYX7D8bp
      rolS3rp+Y5MkiYjLQdCp8qv+ASqCftzz0+KCrnNhYJjqUIDKwFwK98DYJOWyxftXbhCRTdpC
      y2vOhRD0ZQrIXYfpaGsr8Y7rZ0MdwJ7zPz+q62oRQS9Mle7h9izc7Qyxb18rB1vquFcdJZZJ
      UF6ih+9aUSQJt6nxg3MX+Obrh3CqKnfHp2goC9MUjVA0DIq6gWHoHKmpIKvrBFfsB8SKBn2q
      n52nvkh17dOn5KzkqR1AkqRl4dOFTjA2zwe3201N7x7E/bMblgckgLRbZnd3C6/tmKtHCLmd
      TCSefV/oWHUEaSqJac1lE81ksrRURLn2YIR8OkmhUKTC40SRpUXjX2CwaGHsOcyxvV0bHrJ/
      Kgfw+/0lO8Lb05/nhyRJNB7pZeDHn+ArPruBmhKMRxw4Oqs41PxwhB2aTbLDvzFCZbUeJ+99
      fg2HJDGSTNE3NsnOgIvjjdXz8u2PnjOaLaAeOsGuzt0bcg8rWbcDuN1uHA6HbexbjCRJ1DY1
      cKc8iG808UzXKqoSs92V9PS00hQJ4ZrX0ynoBv1TM+xrqXrCFdZGU8BD0/xm8AOPTAaZ3eXh
      Jcp0y4/PmoL0zm66OzrZLEpGgR6nEGZvar04+Px+rMj6C5SyLpnBcidJt4SQJNJuhUOH2tlT
      XbFMOdmpKtRHy7g4tX4HW63WQ4i5dqyTuSINwdIiaJYQ3Ihn6K9oYu/hI5tqbyXVoZfK3q1s
      WLDd2hm9zHg8HoJdbYjrI4vrgLXkBGVcEt3v7COjaRiWwFPQ0Azz0eOKGkYhx5vV65czLEVa
      N5jMFRnIauyuiDwy1weYKBqMhGvpOHGEsiX5aZtFSQdYSIZbMPaFHB632/3K1+++SEiSRNne
      NmaVX+JYYz8yAK8mwBK8ufPRzMylTGdyRJ3qqo2wn4SYL0McyRRQJYnpok5TOMBvNZfjWJFz
      JISgP6ej7D/Ksb1dz22WsWjNC8auKAo+n2/Zhpau6/Ptbx5fdGzzfJEkiUAoyIQiPdYBTAlG
      mgL4EwUyTSFkj4MGx5OjKY2RIGenpp7q3i5MJUmagquTMbqrytgdDdHtcS+uL1aSN0wSTR0c
      eY7GD6DKsry4geVwOHC73Y9kbb4qqm0vI5HycgouBZ9WOhJUVCWGK5y8/eUeCppOS3kYzxrD
      1Zpp4VqXyhDMFjRyhkneNDneWEvE5WA4naUm8Hgh5axuoM88nbM9C6oQAr/fv+gE9gj/clFR
      WUHe64C0vviaALJOmVh7BMXr5Pff6CLkdq37t9XMR9cFpTCF4MZsmum8ht/jJuxyUhnw45Al
      emsr2GdFH3v+wsLYW1Xz3O1P9Xg89rz+JUf1uIDlMiBjVS6+fqoXr1Nd84i/kg/u9LM36MYS
      4rHrgOF0Hl1SeKu1HrVEzcfK3l1CCJJFHUWWyBkmI5ILz65e9h84+FT3+SzYlv+S43A4CL/W
      hRg883BHWAjCCY3rQxO81dny1Nc+tauVD273Ue1xEnItdyIhxJy4bqbA7USGndFISeNfiSUE
      d4QLuW0vQli4PF562tq3rCuQ7QAvOZIk0XL0APd+/An+wsMpS6BgcXdg/JkcIOh2Ue51LRq/
      JEkkizp3EhksS6DKElkhcaShmqB7bSnwU7kinoNHaN+knd31YjvANqCpfSc3upsRn/UtPgWK
      qkTbjtqnul6qUOTTgWFUCcaSaT4qFnGpCooskTUsumsqkAHDsij3uJ64dpzIFrCEwCFLTLmD
      7Gl+eqfcaGwH2AYEAgEO/PG3+FX2v+MUIE+mmNldzttNT5cvP5HO0uh3014WRGqswhICzbTI
      aToeh4rHsbaOLJppcc1yUnnkJNlcjv/305/yp//mm3g8nqe6r83AdoBtwOzwLc7+8iwDQRff
      fKOXqalpKnQNv8v5VGoRmaKGapgPNfQlCbeq4F4lhr/a9e/mdDr/ye8RjkQQQtC+q+OFqxa0
      ZRpedoTg6rVBvvYH3+Tom2+QTsaIjQ1y4f4wqfgkf/Puh5x/ML2uS1qWRbX/2UbpgmGiN7YT
      jsylUSy0v33Rwuy2A7z0CIqmhaxnyEyM8GHfDO09x/AoGoPjMTTL4MPPb6w4x+LG4DCrJVHX
      B7ycH51aJlVe6n3v9N/lp5euM5V7VKCrL5mhfd9+jGySRL6UhKNFbGZ2ndtsG4/tAC87ksSe
      neV893s/JmE66di7k3/8xbuMJopIloYhO4l4Hcv1+pNjfHbzPn0ZE13XSaTTZIo6uqHzw0vX
      +cGnlxmfnGQqnaVgWGi6TjpXIF/MM5POYlgCEEwmdbobyjl7894jx2RRUGXB6K0r3I9lyaYS
      JFJZLFNndmaaXDHPzSvXmZmJoRlbpOkOSJlMRmx0v1+brSOXy/GD//k/OFYeoHmFEsPC9OPy
      jev4oxFGYibB/Bj3NNBNDzu9ed57MEut108NCdKyh3B5HdnRW/gq2wnqY3z3s0G+cfpLvNEQ
      5h8/Po8a8JGX/FixPrzl7QTNMb57fpD2g71UNTaiWILa429x5q//gsliGf/6T7/M337vfX73
      X/wRQ+fepai4qes6ypv7d27F14Xyne985z/aSg7bB1VVCUWipMZHqXCVKlwy+ODT89wYnWEk
      WaSxLMKRgz1oyRjZokkwWkZUgopAkDe6dpHIZnA7PZzsaubqwAz76yKkJTe7KgIMT8VprK+n
      t6mWeE7jZHcL1wam2VcXoaCAFtnNFw61EDOLZPMRvvrOa1TWtVAZctM/Mk5ddQtvvXGEZGaW
      2qqNKbpZ9/e1Je9qs2lIkkRLWxu/fjBALhfD51yRBmEJThw/SX0kwPTsDIal4gHaGupwWHn+
      2y+v8PquZprL/DhVBzsqo2CGAQedtUFuJaC3rgyQ6GprJRoKIEsSHQ11gEpHbYhbCcGp1jrO
      jF/h0vibvPbm64RyWQZncuxoF0yOT9F7/MtEZAOnz0dzff3z/6LmsadA25R4PE7/z/6errLS
      06DVmMpkufJghIagD800qQ/4iHhKhy4X1hVLG94tvf45dwUnTv/2s3yMTcdeBG9TwuEwOe+j
      amxP2sCKeDxcmpglYUkMZDTe7R974nuVumbRMHEHVm+M8aJgO8A2RZIkHOWV6OajEZbHOYFD
      kakLeJlOpYlnMrzdPCdZntM0zBWy+Y97mqiyhJHPrfr/FwXbAbYx+w4c4mqitDjt4+q76yIh
      ssUihiWYzOYZSKT5+YMp/vpqH/oaawQUWUYaH0HX9ScfvIXYDrCNcXs86MEyTGt92027qyvo
      aWzgnx3uZiiroTvc/N6+TvY31NAXT5PTHhr1qk8Baa6hXTabLf3/FwTbAbY5wepaMquMwqsZ
      b1XAx67KMtyKwld272RXRRkS0FtXjeT2cm5s5rHXMyyLn98Z5PP+YaYmJzfkc2wWtgNsYyRJ
      wuX1rvsJsPT8pU6iyBJt5RGEJNMfTy07zgJ+eucBlydifHhviFY9z2mXSXJ06Fk/xqZiO8A2
      J1wWZVbbuGZ6iizzZlsL/YkMk5kcI8kMWd3gg/vD1Gs5vDNT7DQKNLsUhADFvXqD7BcBeyNs
      m1NRWck9IfMsiQZCCLLztQCaafHRvUGq3Q6u3+0noircNkyO+J24PcvNKYFE2Sr9ebcKLRsn
      lpepKZ+Th7cdYJujqipmKMrFkX5666oeUfpbS3pyqqDx/udXCTsdzMgqx+sruD0xwwGfA48s
      IUmlzWhGdXNgA5pYbCR3blzgwqDOH/3T08C8AwghyGazWJaFw+HAMAxkWcblctmKEduAtq5u
      Lt69zs/v9LO/torqQGlNzlJMpjP88soNvuxXcckWV7IZrgzptAgdj3OuQGY1RyqGy7es2L0U
      wioyGZdpCwim9Tzv/eVfPnQA0zQpFosUCnMNF1RVRVVVFrrI27y81NbVcb+2gS7V4IO+Yd7p
      aMW1xoHNsARNCrjnW67u9znn9w8eVoeVso+CJQi1d75QtpNPjHPu7EcEA5CM7qJxz9GHuUCW
      ZWHOb3IsrP7tlkfbAyEE927dxHX1Uwq6QVY32FNdsey3LanSbAnev3qdyvgMTUE/viVyinNO
      YFE0Jdzq8liKJQQXnGGO/em/x/0ClUDmZ4eISdXUBgT9Q0O4VP/DKJAsyzgcDhwOhz3ybzMk
      SaKpdQcPLIXmcAC3qvDR/Qeki6UqteYQQoAEemKGjwoG37s19GgFmZbiwuTyja5JzeSGJohV
      1iCpL47xA3jKGqmPOJFVFztb22horLGzQV8lJsfHGDvzPp1eB2lN59OhcWK5Iqc7Wwl7Htbr
      aqaJDOimxd+8+wFhrwt5cgafE47XR/lsVsdKTtCXSBKtaiekahwLwQf5ID+5fZPorgO8dWwn
      4zGNpt6ThGKf88n1UU5+/V9y76P/TbD9i2jDZ7GinQQcTg63hRmghv1Nj5dQ3AzsFe4rRFVN
      LeL4Ke6feZ92v4svtTWRKBS5OzVLwTQ51FhDMl/k6u27mLKMZRhIUyMU3X6O72jhykAfRa1I
      SrNwKR7+sKeGM5OCnG6QymsUsgrddQ10njxONBrina/s5dM7g5z/zXUadu1F6DqVO3p4+61u
      3n9/nFNfeJvb59/jZ59nOP2lzesC8zhsB3jFqKqppb+8lmJmCpeqEHI5KRQLiNgMv47NkDBM
      vuSTkTGRHRKjLc1URiM4JYmkz8HP+mdob2jAlcvxwzvj7GlsJT45zcczgo7mMiomBrnaP8PX
      9u5Gcbipq6yl8vRJPrk+RijgJepuBaC1dQcSUNPQyNXJMYKerVEgt6dAryD5fI6bP/17uuaN
      biSZ4drAEL2yRni+ccWzrP8utB3gxNe+vqZjf/PJh+zsPUHEszVJCXYqxCuIx+NFbtxJan4R
      XB/yU1tZwS/SBtP6sys0WNMTaz720Otvb5nxg+0Aryw7OnczmHnYZLu7ppxT+3ZzT7eeafQv
      WILpTPal6SVnO8ArRG5mhoxpMjE2gsPtpRCKYi2p5ZWAouokb1lMJjOsrfRlxXuYFnHDsh3A
      5sUjfu8ew7EhLl0fRJFMdG+AqWwBTdeYTWcJqBJVZRHuFAxuDE9SNHXGkmky+tpdocyh0OZ8
      efaP7CjQK0WS7/7Vr/jWt/8dV977Ad//hzNUeUIcceVIesvZ4c7w5z85y9e7DhAGMqlZ/uvZ
      K1TXtvJnB9eeT+oADMPgZdCbsp8ArxQhvvXtb9J/4VMmkkW+8e0/obWtBX+onNO9HUykTU4e
      6mIikeNaweQ340m+tH8PLrPwxCsnTLiIm0uWE02SF9NqXnTsJ8ArRKStjVAkQvk+BdXdwSdn
      zhFu2U1gWMchSXQ3VmNNB/E3BihzqswM32d2cpY3dzxeuKpgCQY6D3L09FcBSKdSL1QPgMdh
      7wO84hQKBX72V3/BO/UVKPLDuftIMkPs/j063E/OCYsZFsXT36B9f89m3+6GY0+BXnFcLhdl
      NXXI8nIjLxgGQeXJbXMLAib3HmZHV/ey103TRNM0LGvrlJ/Xgu0ArziSJOGLlFEwltcNz+YK
      pNcgW37PFWTfF08va6YuhMCyLDRNQ9O0FzokajuADeHqGrIrQp0H66sY94XIPMYJhACzvhmH
      0/mIkcuyjKqq6LpONpvFNM0X0hFsB7Chpq6eEW25ocuShFko4FdLm4gQglHdJD7Qx7mPP+bH
      P/zhYjXhQkFVOp0mm82SzWbJZDIv5HTIjgLZ4A8EKERrMLQ46vwBR4EEAAACg0lEQVRaYDiR
      phGdpaWPAEUBd1xBtJpGmnsP8cWGBhRVJRGPUywWcbvdCCEwDAPLshYlGPP5PE6n84XrE2Y7
      gA0AHb29XPzR93mttgKAiVSGOmW5oQrgXt1Oer7+B4+EOcsrKh4eN2/wCw6wYPC5XA6n07ls
      vbDV2FMgGwAqKioJ7O0lMZ8h6lIVtBVz9rxp4Wjf88QYv2VZGPOL6qXqcrquk8vlXqi1gO0A
      NsCcoe49fIRBfwVF0yTgcZO1lkupZyxBKBx+4rVM08SyrJId5IvF4gu1ILYdwGYRVVXZd+Ik
      t0yVsUSK8BLrMIVg2B2koan5idcxTXOZwshSdRHLssjlXpy+AbYD2CzD5XLR9c7vYJTXICkq
      BQFDlszlli66/uhP1tTpfWm0Z8HwF0Z8y7LI5/Pouv5CPAXsVAibkhiGQd/NGyTHx6jf00VN
      Xd2aozeZTGaxL8DSkX/hb0mS8Hq9eL1eZHlrx2DbAWw2nHg8vqwzzNJuNEtF14LBIA5HqVau
      zw97CmSz4axMiyg11VlYC2z1NMh2AJsNZ2Fas2D8C7lBC8a+8JqmaRSLxS11AnsjzGbDURTl
      EYNfYKWxL4REt2oaZDuAzYaz9AkAj7ZaWspW5wfZUyCbTWe1Kc7C1GgrsR3AZsORZXnN4c2t
      bsBiO4DNhiPL8prl9Z1Opx0GtdleyLK8JkmUhY2wrXQAexFss+FIkoTb7V7cDV5YAyxMixRF
      wev14nQ6t3wn2HYAm01BVVW8Xi/5fB4hxGIHIpfLhcvl2vKRf/E+t/oGbLYnkiTh9/txu91Y
      lrW4LnhRDH8B2wFsNo21rgW2EnsRbPNKYzuAzSuNqmmrt8q0sdnu/H9gLwljjIn1qQAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Covid 19 India Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Covid 19 statewise analysis' width='192'>
      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
      C6i8k9LS/kIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='Sheet 4' width='192'>
      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
      s/IaFFa8DHMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='State wise no.of confirmed cases' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ststistics of chosen state' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
